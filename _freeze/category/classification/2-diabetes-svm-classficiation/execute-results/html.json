{
  "hash": "444710de63d16756fd87886a3aa82075",
  "result": {
    "markdown": "---\ntitle: \"2-svm-diabetes-classfication\"\ncode-fold: true\n---\n\n:::{.callout-note title=\"介绍\"}\n - 参考博客文章:[`diagnose-diabetes-with-svm`](https://www.section.io/engineering-education/diagnose-diabetes-with-svm/)\n\n - SVM(支持向量机)通过引入 `kernelfunction`,使得模型的分类灵活性大大增强,可以解决更多问题.在`julia`中可以通过在[`LIBSVM.jl`](https://docs.juliahub.com/LIBSVM/3eWAI/0.5.0/) 引入 `kernel function` 实现, 参见 文档: [`Support Vector Machine`](https://juliagaussianprocesses.github.io/KernelFunctions.jl/stable/examples/support-vector-machine/)\n - `MLJ.jl` 通过包装接口也提供相似功能\n - 响应变量需要转换类型 `to_ScienceType(d)=coerce(d,:Outcome=> Multiclass)`\n::: \n\n## 1. load package\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\ninclude(\"../utils.jl\")\nimport MLJ: fit!, predict\nusing CSV,DataFrames,Random\nusing MLJ\nusing Plots\nusing KernelFunctions\n```\n:::\n\n\n## 2. process data\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\n df=load_csv(\"diabetes\")\n to_ScienceType(d)=coerce(d,:Outcome=> Multiclass)\n df=to_ScienceType(df)\n first(df,5)|>display\n y, X =  unpack(df, ==(:Outcome), rng=123);\n (Xtrain, Xtest), (ytrain, ytest)  = partition((X, y), 0.7, multi=true,  rng=123)\ndisplay(schema(X))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div><div style = \"float: left;\"><span>5×9 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Pregnancies</th><th style = \"text-align: left;\">Glucose</th><th style = \"text-align: left;\">BloodPressure</th><th style = \"text-align: left;\">SkinThickness</th><th style = \"text-align: left;\">Insulin</th><th style = \"text-align: left;\">BMI</th><th style = \"text-align: left;\">DiabetesPedigreeFunction</th><th style = \"text-align: left;\">Age</th><th style = \"text-align: left;\">Outcome</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"CategoricalArrays.CategoricalValue{Int64, UInt32}\" style = \"text-align: left;\">Cat…</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">148</td><td style = \"text-align: right;\">72</td><td style = \"text-align: right;\">35</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">33.6</td><td style = \"text-align: right;\">0.627</td><td style = \"text-align: right;\">50</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">85</td><td style = \"text-align: right;\">66</td><td style = \"text-align: right;\">29</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">26.6</td><td style = \"text-align: right;\">0.351</td><td style = \"text-align: right;\">31</td><td style = \"text-align: left;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">8</td><td style = \"text-align: right;\">183</td><td style = \"text-align: right;\">64</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">23.3</td><td style = \"text-align: right;\">0.672</td><td style = \"text-align: right;\">32</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">89</td><td style = \"text-align: right;\">66</td><td style = \"text-align: right;\">23</td><td style = \"text-align: right;\">94</td><td style = \"text-align: right;\">28.1</td><td style = \"text-align: right;\">0.167</td><td style = \"text-align: right;\">21</td><td style = \"text-align: left;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">137</td><td style = \"text-align: right;\">40</td><td style = \"text-align: right;\">35</td><td style = \"text-align: right;\">168</td><td style = \"text-align: right;\">43.1</td><td style = \"text-align: right;\">2.288</td><td style = \"text-align: right;\">33</td><td style = \"text-align: left;\">1</td></tr></tbody></table></div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>┌──────────────────────────┬────────────┬─────────┐\n│ names                    │ scitypes   │ types   │\n├──────────────────────────┼────────────┼─────────┤\n│ Pregnancies              │ Count      │ Int64   │\n│ Glucose                  │ Count      │ Int64   │\n│ BloodPressure            │ Count      │ Int64   │\n│ SkinThickness            │ Count      │ Int64   │\n│ Insulin                  │ Count      │ Int64   │\n│ BMI                      │ Continuous │ Float64 │\n│ DiabetesPedigreeFunction │ Continuous │ Float64 │\n│ Age                      │ Count      │ Int64   │\n└──────────────────────────┴────────────┴─────────┘\n</pre>\n```\n:::\n\n:::\n:::\n\n\n## 3. MLJ workflow\n### 3.1 defin model\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nSVC = @load SVC pkg=LIBSVM\n#define kernel function,evaulate  kernelfunctions methods\nkernels=[PolynomialKernel(; degree=2, c=1), \n         SqExponentialKernel(),\n         NeuralNetworkKernel(),\n         LinearKernel(;c=1.0)\n]\n\nsvc_mdls = [SVC(;kernel=k) for  k in kernels]\nsvcs = [machine(model, Xtrain, ytrain;scitype_check_level=0) for model in svc_mdls]\n[fit!(svc) for svc in svcs]\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: Training machine(SVC(kernel = Polynomial Kernel (c = 1, degree = 2), …), …).\n\nWARNING: reaching max number of iterations\n[ Info: Training machine(SVC(kernel = Squared Exponential Kernel (metric = Distances.Euclidean(0.0)), …), …).\n[ Info: Training machine(SVC(kernel = Neural Network Kernel, …), …).\n[ Info: Training machine(SVC(kernel = Linear Kernel (c = 1.0), …), …).\n\nWARNING: reaching max number of iterations\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nimport MLJLIBSVMInterface ✔\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n4-element Vector{Machine{MLJLIBSVMInterface.SVC, true}}:\n machine(SVC(kernel = Polynomial Kernel (c = 1, degree = 2), …), …)\n machine(SVC(kernel = Squared Exponential Kernel (metric = Distances.Euclidean(0.0)), …), …)\n machine(SVC(kernel = Neural Network Kernel, …), …)\n machine(SVC(kernel = Linear Kernel (c = 1.0), …), …)\n```\n:::\n:::\n\n\n### 3.2  predict test\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nfor (idx, str) in enumerate([\"Polynomial \",\"Gaussian\",\"NeuralNetwork\",\"Linear\"])\n    local yhat=predict(svcs[idx],Xtest)\n    local acc=accuracy(yhat,ytest) \n    @info \"$(str) kernel predict accuracy\"=>acc   \nend\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n[ Info: \"Polynomial  kernel predict accuracy\" => 0.47391304347826085\n[ Info: \"Gaussian kernel predict accuracy\" => 0.6434782608695652\n[ Info: \"NeuralNetwork kernel predict accuracy\" => 0.6478260869565218\n[ Info: \"Linear kernel predict accuracy\" => 0.7782608695652173\n```\n:::\n:::\n\n\n",
    "supporting": [
      "2-diabetes-svm-classficiation_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}